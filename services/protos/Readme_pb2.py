# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Readme.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor

from typing import overload, Iterator, List, Dict
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cReadme.proto\x12\x0esylk.Readme.v1\"\'\n\x08Markdown\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\r\n\x05title\x18\x02 \x01(\tb\x06proto3')



_MARKDOWN = DESCRIPTOR.message_types_by_name['Markdown']

@overload
class Markdown(_message.Message):
	"""sylk.build generated message [sylk.Readme.v1.Markdown]
	A class respresent a Markdown type
	
	"""
	path = str # type: str
	title = str # type: str

	def __init__(self, path=str, title=str):
		"""
		

		Attributes:
		----------
		path : str
			
		title : str
			
		"""
		pass
Markdown = _reflection.GeneratedProtocolMessageType('Markdown', (_message.Message,), {
  'DESCRIPTOR' : _MARKDOWN,
  '__module__' : 'Readme_pb2'
  # @@protoc_insertion_point(class_scope:sylk.Readme.v1.Markdown)
  })
_sym_db.RegisterMessage(Markdown)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _MARKDOWN._serialized_start=32
  _MARKDOWN._serialized_end=71
# @@protoc_insertion_point(module_scope)
